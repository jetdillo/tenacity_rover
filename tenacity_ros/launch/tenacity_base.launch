<!-- Bringup the robot's base controller
 Start the teleop controls for the Tenacity Rover
-->
<launch>
    <arg name="port" value="/dev/ttyACM0"/>

    <!-- start rosserial node -->
    <node 
        pkg="rosserial_python"
        type="serial_node.py"
        name="drive_node">
        args="$(port)"
    </node>
   
    <!-- start corner_steering node -->
    <node 
        pkg="tenacity_ros"
        type="teleop_corner_twist.py"
        name="teleop_corner_twist">
     </node>

    <!-- start teleop_twist interface -->
    <include file="$(find teleop_twist_joy)/launch/teleop.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/controller_manager.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/start_tilt_controller.launch">
    </include>
   
    <!-- start urg laser node -->
    <!-- <include file="$(find urg_node)/launch/urg_lidar.launch"> --> 
    <!-- </include> -->
     
    <!-- start microstrain IMU --> 
    <include file="$(find ros_mscl)/launch/microstrain.launch">
    <arg name="port" value="/dev/ttyACM1"/>
    </include> 
 
    <!-- start compute battery monitor node -->
    <!--<include file="$(find ros_battery_monitor)/launch/battery_monitor.launch"> -->
   <!--<arg name="port" value="/dev/serial0"/> -->
<!--     <arg name="bus" value="compute" /> -->
<!--    </include> -->
    
    <!-- start motor battery monitor node -->
    <!-- using rosserial_python node --> 
 
     start motor current monitor node -->
    <include file="$(find ros_battery_monitor)/launch/current_monitor.launch"> 
    <arg name="port" value="/dev/ina"/> 
    <arg name="bus" value="compute" /> 
    <arg name="baud" value="115200" />
    </include> 

    <!-- start rasbotix sonar nodes
     <include file="$(find rasbotix_sonar)/launch/sonar_node.launch">
     </include> -->
    
</launch>
