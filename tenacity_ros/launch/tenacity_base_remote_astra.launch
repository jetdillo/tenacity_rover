<!-- Bringup the robot's base controller
 Start the teleop controls for the Tenacity Rover
-->
<launch>
    <arg name="port" default="/dev/ttyACM0"/>

    <!-- start rosserial node -->
    <node 
        pkg="rosserial_python"
        type="serial_node.py"
        name="drive_node">
        args="$(port)"
    </node>
   
    <!-- start corner_steering node -->
    <node 
        pkg="tenacity_ros"
        type="teleop_corner_twist.py"
        name="teleop_corner_twist">
    </node>

    <!-- start teleop_twist interface -->
    <include file="$(find teleop_twist_joy)/launch/teleop.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/controller_manager.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/start_tilt_controller.launch">
    </include>

    <include file="$(find tenacity_description)/launch/description.launch">
    </include>
  
    <!-- Launch the robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />


 
   <!-- start rasbotix sonar nodes -->
     <include file="$(find rasbotix_sonar)/launch/sonar_node.launch">
     </include>

   <!-- start depthimage_to_laserscan off the depth topic on the astra -->
   <node
       pkg="depthimage_to_laserscan" 
       type="depthimage_to_laserscan" 
       name="depthimage_to_laserscan" 
       args="image:=/camera/depth/image_raw" >
   </node>

    <!-- start microstrain IMU --> 
    <include file="$(find ros_mscl)/launch/microstrain.launch">
    <arg name="port" value="/dev/ttyACM1"/>
    </include> 
 
    <!-- start battery monitor node -->
    <include file="$(find ros_battery_monitor)/launch/battery_monitor.launch">
    <arg name="port" value="/dev/serial0"/>
    </include>

   <include file="$(find tenacity_ros)/launch/astra_remote.launch"> 
   </include>


</launch>
