<!-- Bringup the robot's base controller
 Start the teleop controls for the Tenacity Rover
-->
<launch>
    <!-- start corner_steering node -->
    <node name="teleop_corner_twist pkg="tenacity_ros" type="teleop_corner_twist.py" />

    <!-- start teleop_twist interface -->
    <include file="$(find teleop_twist_joy)/launch/teleop.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/controller_manager.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/start_tilt_controller.launch">
    </include>

    <!--bring up a robot_description and robot_state_publisher for navigation and localization -->
    <include file="$(find tenacity_description)/launch/description.launch" >
    </include> 

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
   
    <!-- start microstrain IMU --> 
    <include file="$(find ros_mscl)/launch/microstrain.launch">
    <arg name="port" value="/dev/microstrain"/>
    </include> 

    <!-- start current monitor node for motor and compute INA260s -->
    <include file="$(find ros_battery_monitor)/launch/current_monitor.launch">
    <arg name="port" value="/dev/ina"/>
    <arg name="bus" value="compute" />
    <arg name="baud" value="57600" />
    </include>

  <include file="$(find rasbotix_sonar)/launch/hcs_sonar_node.launch">
  <arg name="port" value="/dev/ttyAMA0" />
  <arg name="baud" value="57600" />
  </include>

    <!-- start watchdog manager to monitor alert states -->
    <include file="$(find tenacity_watchdog_manager)/launch/watchdog_manager.launch"> 
    </include>

  <include file="$(find tenacity_ros)/launch/oakd_yolo_remote.launch">
  <!--  <include file="$(find tenacity_ros)/launch/cameras_remote.launch"> -->
   </include>
   
</launch>
