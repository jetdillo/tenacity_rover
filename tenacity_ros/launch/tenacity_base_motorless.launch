<launch>
    <!-- Bring up a basic keepalive node for other more primative nodes to track --> 
    <node 
       pkg="tenacity_ros"
       type="keepalive.py"
       name="keepalive">
    </node>

    <!-- start corner_steering node -->
    <node 
        pkg="tenacity_ros"
        type="teleop_corner_twist.py"
        name="teleop_corner_twist">
     </node>

    <!-- start trim_steering node --> 
    <node 
        pkg="tenacity_ros"
        type="steering_corner_twist.py"
        name="steering_corner_twist">
     </node>

 <!-- Deprecated. We don't need a /joy node with the iFlySky controller
    <!-- start teleop_twist interface -->
    <include file="$(find teleop_twist_joy)/launch/teleop.launch">
    </include>
   -->
    
    <include file="$(find my_dynamixel_tutorial)/controller_manager.launch">
    </include>
    
    <include file="$(find my_dynamixel_tutorial)/start_tilt_controller.launch">
    </include>

    <!--bring up a robot_description and robot_state_publisher for navigation and localization -->
    <include file="$(find tenacity_description)/launch/description.launch" >
    </include> 

  <!--  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> -->
   
    <!-- start microstrain IMU --> 
    <include file="$(find ros_mscl)/launch/microstrain.launch">
    <arg name="port" value="/dev/microstrain"/>
    </include> 

    <!-- start current monitor node for motor and compute INA260s -->
    <!-- uncomment baud and tty name for serial version -->
    <include file="$(find ros_battery_monitor)/launch/current_monitor.launch">
    <arg name="bus" value="compute" />
  <!--  <arg name="port" value="/dev/ina"/> -->
  <!--  <arg name="baud" value="57600" /> -->
    </include>

   <!-- start optical flow from OpenMV Cam -->
   <include file="$(find openmv_flow)/launch/openmv_flow.launch">
   </include>

    <!-- start watchdog manager to monitor alert states -->
    <include file="$(find tenacity_watchdog_manager)/launch/watchdog_manager.launch"> 
    </include>
   <include file="$(find rasbotix_sonar)/launch/hcs_sonar_node.launch">
   <!-- <arg name="port" value="tcp"/> --> 
   <!-- <arg name="port" value="/dev/range" /> -->
   <!-- <arg name="baud" value="57600" /> -->
   </include>

</launch>
